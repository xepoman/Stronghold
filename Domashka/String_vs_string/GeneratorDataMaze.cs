using System.Collections.Generic;
using System;

public class GeneratorDataMaze
{
    public float placementThreshold;    

    public GeneratorDataMaze()
    {
        placementThreshold = .1f;                               
    }

    public int[,] FromDimensions(int sizeRows, int sizeCols)   // генератор лабиринта 
    {
        int[,] maze = new int[sizeRows, sizeCols];
        //http://www.jamisbuck.org/mazes/# сайт лабиринтов
        //Recursive Backtracking - лабиринт рекурсивынй обратное отслежование (много памети) 
        //1. Выберите отправную точку в поле.
        //2. В этой точке случайным образом выбирайте стену и делайте проход в соседнюю ячейку, но только если соседняя ячейка еще не посещена. Это становится новой текущей ячейкой.
        //3. Если все соседние ячейки были посещены, вернитесь к последней ячейке, которая имеет не вырезанные стенки, и повторите.
        //4.Алгоритм заканчивается, когда процесс полностью поддерживается до начальной точки.
        /*      int rMax = maze.GetUpperBound(0);
          int cMax = maze.GetUpperBound(1);
              Random rand = new Random();
              for (int i = 0; i <= rMax; i++)
          {
              for (int j = 0; j <= cMax; j++)
              {
                  if (i == 0 || j == 0 || i == rMax || j == cMax)
                  {
                      maze[i, j] = 1;
                  }
                  else if (i % 2 == 0 && j % 2 == 0)
                  {
                      if (rand.NextDouble() > placementThreshold)
                      {
                          maze[i, j] = 1;

                          int a = rand.NextDouble() < .5 ? 0 : (rand.NextDouble() < .5 ? -1 : 1);
                          int b = a != 0 ? 0 : (rand.NextDouble() < .5 ? -1 : 1);
                          maze[i+a, j+b] = 1;
                      }
                  }
              }
          }*/

        /*Лабиринт Элера  можно создать бесконечный
         1. Инициализируйте ячейки первой строки, чтобы каждая существовала в своем собственном наборе.
         2.Теперь случайным образом объедините соседние ячейки, но только если они не находятся в одном наборе. 
           При объединении соседних ячеек объедините ячейки обоих наборов в один набор, указывая,
           что все ячейки в обоих наборах теперь соединены (существует путь, который соединяет любые две ячейки в наборе).
         3. Для каждого набора случайным образом создайте вертикальные соединения вниз до следующего ряда.
            Каждый оставшийся комплект должен иметь как минимум одно вертикальное соединение. 
            Ячейки в следующем ряду, соединенные таким образом, должны совместно использовать набор ячеек над ними.
         4. Выделите следующий ряд, поместив все оставшиеся ячейки в свои наборы.
         5. Повторяйте, пока не будет достигнут последний ряд.
         6. В последнем ряду объедините все смежные ячейки, которые не разделяют набор, и пропустите вертикальные соединения, и все готово!
         */
        return maze;
    }
}